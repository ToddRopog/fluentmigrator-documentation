# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  docFxTool: 'mono docfx.console/tools/docfx.exe'

steps:
- script: |
    git submodule update --init --recursive
  displayName: 'Update submodules (main fluentmigrator repo)'

- task: NuGetToolInstaller@1

# We need to use 2.59.4 of docfx.console due to https://github.com/dotnet/docfx/issues/8097 
# which is fixed by https://github.com/dotnet/docfx/pull/8135
- task: NuGetCommand@2
  displayName: 'Install docfx.console'
  inputs:
    command: 'custom'
    arguments: 'install docfx.console -Version 2.59.4 -ExcludeVersion'

- script: |
    $(docFxTool) metadata docfx.json
    $(docFxTool) build docfx.json
  displayName: 'Run DocFX build'

- task: ArchiveFiles@2
  displayName: 'Archive _site folder'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/_site'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: 'site.zip'
    replaceExistingArchive: true

- task: CopyFiles@2
  displayName: 'Copy output to build artifacts'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: 'site.zip'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish build artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
